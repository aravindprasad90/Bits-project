661d660
<         printf("\n\rselected is set\n\r");
666,671c665,666
<         h->in_len=recvfrom(h->fd,h->in,MSGSIZE,0,(struct sockaddr *)&from, &fromlen);
< 
<         printf("\n\rrecvfrom in_len %d\n\r", h->in_len);
< //aravind
< //		h->in_len = recvfrom(h->fd, h->in,
< //		    MSGSIZE, MSG_WAITALL, (struct sockaddr *)&from, &fromlen);
---
> 		h->in_len = recvfrom(h->fd, h->in,
> 		    MSGSIZE, MSG_WAITALL, (struct sockaddr *)&from, &fromlen);
676,677d670
< //aravind
< #if 0
679d671
<             printf("\n\rresponse is valid\n\r");
685,686d676
< #endif
< 			return h->in[POS_CODE];
727,728d716
< //aravind
< #if 0
733,737d720
< #endif
<         if ((h->fd = socket(AF_INET, SOCK_STREAM, 0)) == -1) {
<             generr(h, "Cannot create socket: %s", strerror(errno));
<             return -1;
<         }
764,771d746
<     printf("\n\rconnect called\n\r");
<     if(connect(h->fd, (const struct sockaddr *)&h->servers[h->srv].addr,
<             sizeof h->servers[h->srv].addr) != 0)
<     {
<         printf("\n\rconnect failed\n\r");
<         return -1;
<     }
< 
776d750
<     printf("\n\rlen = %d out_len %d\n\r", n, h->out_len);
801,803d774
<     h->in_len=recvfrom(h->fd,h->in,MSGSIZE,0,NULL,NULL);
< //aravind
< #if 0
806d776
< #endif
993,994d962
< //aravind
< #if 0
999,1003d966
< #endif
<         if ((h->fd = socket(AF_INET, SOCK_STREAM, 0)) == -1) {
<             generr(h, "Cannot create socket: %s", strerror(errno));
<             return -1;
<         }
1262,1263d1224
< //aravind;
<             printf("\n\rselect: %s\n\r", strerror(errno));
1271d1231
< //aravind
1273,1274d1232
<             {
<                 printf("\n\rcontinue the select\n\r");
1277d1234
<             }
